{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"token",
				"token_type"
			],
			[
				"Token",
				"Token_Star"
			],
			[
				"Meta",
				"MetaInfoCount"
			],
			[
				"Json",
				"JsonData"
			],
			[
				"json",
				"json_data"
			],
			[
				"StringToi",
				"StringToInt32"
			],
			[
				"Get",
				"GetInt32"
			],
			[
				"MetaIn",
				"MetaInfoCount"
			],
			[
				"Struct",
				"StructToString"
			],
			[
				"meta",
				"meta_member"
			],
			[
				"struct",
				"struct_string_return"
			],
			[
				"update",
				"updateRequest"
			],
			[
				"GetA",
				"GetAsTextUnsafe"
			],
			[
				"respon",
				"responseData"
			],
			[
				"THir",
				"ThirdPartyLauncher"
			],
			[
				"Universe",
				"UniverseCamPos"
			],
			[
				"skll",
				"skill_node"
			],
			[
				"journey_step",
				"journey_step_type"
			],
			[
				"Missin",
				"MissingMSStart"
			],
			[
				"ve",
				"vector2"
			],
			[
				"coast",
				"CoastDurationSeconds"
			],
			[
				"Global",
				"GlobalTransMem"
			],
			[
				"has",
				"hasFlag"
			],
			[
				"show",
				"showState"
			],
			[
				"DistTo",
				"DistToStart"
			],
			[
				"Cached",
				"CachedDirToTargetForce"
			],
			[
				"Current",
				"CurrentShip"
			],
			[
				"Mass",
				"MassCurrent"
			],
			[
				"item_hol",
				"item_hold_filter"
			],
			[
				"Inputs",
				"InputsMissing"
			],
			[
				"Ediot",
				"EditorState"
			],
			[
				"Editor",
				"EditorState"
			],
			[
				"Items",
				"ItemsMissingCount"
			],
			[
				"Curr",
				"CurrentStation"
			],
			[
				"Cur",
				"CurrentStation"
			],
			[
				"COnver",
				"ConverterUpdate"
			],
			[
				"Durati",
				"DurationMS"
			],
			[
				"output",
				"OutputsCount"
			],
			[
				"Output",
				"OutputsCount"
			],
			[
				"Hovering",
				"HoveringItemWindow"
			],
			[
				"Hover",
				"HoveringItemWindow"
			],
			[
				"HO",
				"HoldItemDraggingFrom"
			],
			[
				"Hold",
				"HoldItemDraggingFrom"
			],
			[
				"Update",
				"UpdateMass"
			],
			[
				"Chang",
				"ChangedFlagCount"
			],
			[
				"Con",
				"Consumers"
			],
			[
				"nam",
				"nameLabel"
			],
			[
				"Exper",
				"ExperienceType"
			],
			[
				"FeaturedC",
				"FeaturedCardLaunchType"
			],
			[
				"worl",
				"worldscapeThumbnail"
			],
			[
				"exper",
				"experienceDisplayName"
			],
			[
				"ExperieneType",
				"ExperienceTypeInformation"
			],
			[
				"Clear",
				"ClearPreviousData"
			],
			[
				"Expre",
				"ExperienceTypeInformation"
			],
			[
				"cur",
				"currentWorldSpaces"
			],
			[
				"ship_modul",
				"ship_module_id"
			],
			[
				"ship_module_",
				"ship_module_slot_type"
			],
			[
				"ship_modu",
				"ship_module_type"
			],
			[
				"Item",
				"ItemDragging"
			],
			[
				"Self",
				"SelfStation"
			],
			[
				"Platfor",
				"PlatformApi"
			],
			[
				"Keyo",
				"KeyboardInput"
			],
			[
				"Keyboar",
				"KeyboardState"
			],
			[
				"event",
				"eventType"
			],
			[
				"MouseLe",
				"MouseLeftState"
			],
			[
				"MouseL",
				"MouseLeftState"
			],
			[
				"MouseRi",
				"MouseRightState"
			],
			[
				"even",
				"eventType"
			],
			[
				"Tar",
				"TargetFrameSec"
			],
			[
				"Next",
				"NextPath"
			],
			[
				"PathList",
				"PathListCount"
			],
			[
				"Path",
				"PathList"
			],
			[
				"FileType",
				"FileTypeDesired"
			],
			[
				"Fieltype",
				"FileTypeChar"
			],
			[
				"GetWall",
				"GetWallClockGame"
			],
			[
				"Mem",
				"Memory"
			],
			[
				"File",
				"FileName"
			],
			[
				"Loa",
				"LoadFileData"
			],
			[
				"Contents",
				"ContentsSize"
			],
			[
				"Data",
				"DataInside"
			],
			[
				"file",
				"fileReplacements"
			],
			[
				"teach",
				"teachingExpression"
			],
			[
				"Misison",
				"MissionDefinitions"
			],
			[
				"MisisonDe",
				"MissionDefinitionsCount"
			],
			[
				"Depende",
				"DependencyIDs"
			],
			[
				"Depend",
				"DependenciesCount"
			],
			[
				"mission",
				"mission_definition"
			],
			[
				"position",
				"position_x"
			],
			[
				"card",
				"cardHovered"
			],
			[
				"new",
				"newCard"
			],
			[
				"M",
				"MainMenuFeaturedCard"
			],
			[
				"pages",
				"pagesCount"
			],
			[
				"Fourh",
				"FourthMission"
			],
			[
				"Third",
				"ThirdMission"
			],
			[
				"WOrld",
				"WorldPos"
			],
			[
				"v",
				"vector3"
			],
			[
				"Sc",
				"ScreenPos"
			],
			[
				"Actie",
				"ActiveCam"
			],
			[
				"id",
				"IDSelected"
			],
			[
				"ID",
				"IDSelected"
			],
			[
				"Active",
				"ActiveCam"
			],
			[
				"Mission",
				"MissionSelected"
			],
			[
				"MIssion",
				"MissionWindowOpen"
			],
			[
				"earen",
				"earnedInventory"
			],
			[
				"ear",
				"earnedInventory"
			],
			[
				"resour",
				"resorucesPath"
			],
			[
				"inven",
				"inventoryMode"
			],
			[
				"progressionstep",
				"progressionStepKey"
			],
			[
				"prog",
				"progressionController"
			],
			[
				"Load",
				"LoadMainMenu"
			],
			[
				"notifi",
				"notification"
			],
			[
				"Battl",
				"BattleMonster"
			],
			[
				"rea",
				"real32"
			],
			[
				"RandomR",
				"RandomRangeInt"
			],
			[
				"TIme",
				"TimeSeconds"
			],
			[
				"Bounc",
				"BouncerPos"
			],
			[
				"Game",
				"GameNull"
			],
			[
				"message",
				"messageDefaultString"
			],
			[
				"mess",
				"messageDisplay"
			],
			[
				"title",
				"titleString"
			],
			[
				"maincan",
				"mainCanvasCollider"
			],
			[
				"main",
				"mainCanvas"
			],
			[
				"Target",
				"TargetValid"
			],
			[
				"Rest",
				"ResetBullets"
			],
			[
				"Trans",
				"TransitionToNewExperience"
			],
			[
				"Set",
				"SetActive"
			],
			[
				"energy",
				"energyEffect"
			],
			[
				"Drop",
				"DropTables"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Game/code/Game/Game.cpp",
			"settings":
			{
				"buffer_size": 37850,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/t/game/code/engine/generated.h",
			"settings":
			{
				"buffer_size": 4015,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Game/code/Game/Game.h",
			"settings":
			{
				"buffer_size": 5471,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#pragma once\n\n#ifndef JsonCPP\n#define JsonCPP\n\nnamespace json {\n\n\tvoid MovePastWhitespace(tokenizer *Tokenizer)\n\t{\n\t\twhile (*Tokenizer->Position == ' ' ||\n\t\t        *Tokenizer->Position == '\\n' ||\n\t\t        *Tokenizer->Position == '\\r' ||\n\t\t        *Tokenizer->Position == '\\t') {\n\t\t\tTokenizer->Position++;\n\t\t}\n\t}\n\n\ttoken_type GetNextToken(tokenizer *Tokenizer)\n\t{\n\t\tMovePastWhitespace(Tokenizer);\n\n\t\ttoken_type TokenType = token_type::end_of_file;\n\t\tswitch (*Tokenizer->Position) {\n\t\t\tcase ('['): { TokenType = token_type::open_bracket; \t} break;\n\t\t\tcase (']'): { TokenType = token_type::close_bracket;\t} break;\n\t\t\tcase ('{'): { TokenType = token_type::open_curly; \t\t} break;\n\t\t\tcase ('}'): { TokenType = token_type::close_curly; \t\t} break;\n\t\t\tcase ('\"'): { TokenType = token_type::quote; \t\t\t} break;\n\t\t\tcase (','): { TokenType = token_type::comma; \t\t\t} break;\n\t\t\tcase (':'): { TokenType = token_type::colon;\t\t\t} break;\n\t\t\tcase ('*'): { TokenType = token_type::end_of_file; \t\t} break;\n\t\t\tdefault: { TokenType = token_type::identifier; \t\t\t} break;\n\t\t}\n\t\tTokenizer->Position++;\n\t\treturn (TokenType);\n\t}\n\n\tstring GrabUntilToken(tokenizer* Tokenizer, token_type EndToken)\n\t{\n\t\tchar* KeyStart = Tokenizer->Position;\n\t\twhile (GetNextToken(Tokenizer) != EndToken) { }\n\t\tchar* KeyEnd = Tokenizer->Position;\n\t\tKeyEnd -= 1;\n\n\t\tstring Identifier = {};\n\t\twhile (KeyStart < KeyEnd) {\n\t\t\tchar NextCharacter = KeyStart[0];\n\t\t\tIdentifier = Identifier + NextCharacter;\n\n\t\t\tKeyStart++;\n\t\t}\n\n\t\treturn (Identifier);\n\t}\n\n\tjson_data GetJson(memory_arena* Memory)\n\t{\n\t\tjson_data JsonData = {};\n\t\tJsonData.PairsCount = 0;\n\t\tJsonData.Pairs = (json_pair *)ArenaAllocate(Memory, sizeof(json_pair) * Max_Pairs_Count);\n\n\t\treturn JsonData;\n\t}\n\n\tjson_data LoadJsonData(tokenizer* Tokenizer, memory_arena* Memory)\n\t{\n\t\tjson_data JsonData = GetJson(Memory);\n\n\t\ttoken_type NextToken = GetNextToken(Tokenizer);\n\n\t\twhile (true) {\n\t\t\tif (NextToken == token_type::open_curly) {\n\n\t\t\t} else if (NextToken == token_type::close_curly) {\n\t\t\t\tbreak;\n\t\t\t} else if (NextToken == token_type::quote) {\n\n\t\t\t\tJsonData.Pairs[JsonData.PairsCount].Key = GrabUntilToken(Tokenizer, token_type::quote);\n\t\t\t\tTokenizer->Position += 1;\n\n\t\t\t\ttoken_type Next = GetNextToken(Tokenizer);\n\n\t\t\t\tif (Next == token_type::quote) {\n\t\t\t\t\t// data itself\n\t\t\t\t\tJsonData.Pairs[JsonData.PairsCount].Data = GrabUntilToken(Tokenizer, token_type::quote);\n\n\t\t\t\t} else if (Next == token_type::open_bracket)  {\n\t\t\t\t\t// an array\n\n\t\t\t\t\tbool32 Running = true;\n\t\t\t\t\tint32\n\t\t\t\t\twhile (Running && Tokenizer->Valid()) {\n\n\t\t\t\t\t\tJsonData.Pairs[JsonData.PairsCount].Child[0] = (json_data*)ArenaAllocate(Memory, sizeof(json_data));\n\n\t\t\t\t\t\tjson_data Child = LoadJsonData(Tokenizer, Memory);\n\t\t\t\t\t\tMemoryCopy((char*)JsonData.Pairs[JsonData.PairsCount].Child[0], (char*)(&Child), sizeof(json_data));\n\t\t\t\t\t}\n\n\t\t\t\t} else if (Next == token_type::open_curly)  {\n\t\t\t\t\t// an object\n\n\t\t\t\t\tJsonData.Pairs[JsonData.PairsCount].Child[0] = (json_data*)ArenaAllocate(Memory, sizeof(json_data));\n\n\t\t\t\t\tjson_data Child = LoadJsonData(Tokenizer, Memory);\n\t\t\t\t\tMemoryCopy((char*)JsonData.Pairs[JsonData.PairsCount].Child[0], (char*)(&Child), sizeof(json_data));\n\n\t\t\t\t} else {\n\t\t\t\t\tTokenizer->Position -= 1;\n\t\t\t\t\tJsonData.Pairs[JsonData.PairsCount].Data = GrabUntilToken(Tokenizer, token_type::comma);\n\t\t\t\t}\n\n\t\t\t\t// make sure that key isn't alraedy used\n\t\t\t\t/*\n\t\t\t\tfor (int32 KeyIndex = 0; KeyIndex < JsonData.PairsCount; KeyIndex++) {\n\t\t\t\t\tif (JsonData.Pairs[KeyIndex].Key == JsonData.Pairs[JsonData.PairsCount].Key) {\n\t\t\t\t\t\t// Duplicate key detected\n\t\t\t\t\t\t//Assert(0);\n\t\t\t\t\t\t// this could be an error\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t*/\n\n\t\t\t\tJsonData.PairsCount++;\n\t\t\t\tAssert(JsonData.PairsCount < Max_Pairs_Count);\n\t\t\t}\n\n\t\t\tNextToken = GetNextToken(Tokenizer);\n\t\t}\n\n\t\treturn JsonData;\n\t}\n\n\tjson_data LoadFile(string Path, memory_arena * Memory)\n\t{\n\t\tread_file_result Result = PlatformApi.ReadFile(Path.CharArray, Memory);\n\n\t\tif (Result.ContentsSize > 0) {\n\t\t\ttokenizer Tokenizer = {};\n\t\t\tTokenizer.Position = (char*)Result.Contents;\n\t\t\tTokenizer.End = Tokenizer.Position + Result.ContentsSize;\n\n\t\t\ttoken_type NextToken = GetNextToken(&Tokenizer);\n\t\t\tAssert(NextToken == token_type::open_curly);\n\n\t\t\treturn LoadJsonData(&Tokenizer, Memory);\n\t\t}\n\n\t\treturn json_data{};\n\t}\n\n\tvoid AddKeyPair(string Key, string Data, json_data * JsonData)\n\t{\n\t\tfor (int32 PairIndex = 0; PairIndex < JsonData->PairsCount; PairIndex++) {\n\t\t\tif (JsonData->Pairs[PairIndex].Key == Key) {\n\t\t\t\tJsonData->Pairs[PairIndex].Data = Data;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tjson_pair* NewPair = &JsonData->Pairs[JsonData->PairsCount];\n\t\tNewPair->Key = Key;\n\t\tNewPair->Data = Data;\n\n\t\tAssert(JsonData->PairsCount < Max_Pairs_Count);\n\t\tJsonData->PairsCount++;\n\t}\n\n\tvoid AddKeyPair(string Name, vector2 Data, json_data * JsonData)\n\t{\n\t\tAddKeyPair(Name + string{\"_x\"}, Real64ToString(Data.X, 7), JsonData);\n\t\tAddKeyPair(Name + string{\"_y\"}, Real64ToString(Data.Y, 7), JsonData);\n\t}\n\n\tstring GenerateJsonLine(string Key, string Data, bool32 AddComma)\n\t{\n\t\t// NOTE this is probably a really inefficient way to do this. Probaby a lot of strings and allocations made here for no reason.\n\t\tstring MaybeComma = \"\\r\";\n\t\tif (AddComma) { MaybeComma = \",\"; }\n\t\tstring Final = \"\\r \\\"\" + Key + \"\\\"\" + \":\" + \"\\\"\" + Data + \"\\\"\" + MaybeComma;\n\t\treturn (Final);\n\t}\n\n\tvoid SaveToFile(json_data * JsonData, string FileLocation)\n\t{\n\t\tchar* FinalString = (char *)ArenaAllocate(GlobalTransMem, sizeof(char) * 4096);\n\t\tFinalString[0] = '{';\n\t\tint32 FinalIndex = 1;\n\n\t\tfor (int32 PairIndex = 0; PairIndex < JsonData->PairsCount; PairIndex++) {\n\t\t\tstring NewLine = GenerateJsonLine(JsonData->Pairs[PairIndex].Key, JsonData->Pairs[PairIndex].Data, PairIndex != JsonData->PairsCount - 1);\n\t\t\tint32 NewLineLength = StringLength(NewLine);\n\t\t\tfor (int32 CharIndex = 0; CharIndex < NewLineLength; CharIndex++) {\n\t\t\t\tFinalString[FinalIndex] = NewLine.CharArray[CharIndex];\n\t\t\t\tFinalIndex++;\n\t\t\t}\n\t\t}\n\n\t\tFinalString[FinalIndex] = '}';\n\t\tFinalIndex++;\n\n\t\tPlatformApi.WriteFile(FileLocation.CharArray, FinalString, sizeof(char) * FinalIndex);\n\t}\n\n\tjson_pair* GetPair(string Key, json_data* JsonData)\n\t{\n\t\tsplit_info Split = SplitString(Key, '.', false, true, GlobalTransMem);\n\n\t\tfor (int32 PairIndex = 0; PairIndex < JsonData->PairsCount; PairIndex++) {\n\t\t\tjson_pair* Pair = &JsonData->Pairs[PairIndex];\n\n\t\t\tif (Pair->Key == Split.Strings[0]) {\n\n\t\t\t\tif (Split.StringsCount == 1) {\n\t\t\t\t\treturn Pair;\n\t\t\t\t} else {\n\n\t\t\t\t\tstring NewPath = Split.Strings[1];\n\t\t\t\t\tfor (uint32 x = 2; x < Split.StringsCount; x++) {\n\t\t\t\t\t\tNewPath = NewPath + \".\" + Split.Strings[x];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn GetPair(NewPath, Pair->Child[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// That key not found\n\t\treturn GameNull;\n\t}\n\n\tstring GetData(string Key, json_data * JsonData)\n\t{\n\t\tjson_pair* Pair = GetPair(Key, JsonData);\n\n\t\tif (Pair != GameNull) {\n\t\t\treturn Pair->Data;\n\t\t}\n\n\t\t// Did not find that pair\n\t\treturn (EmptyString);\n\t}\n\n\tstring GetString(string Key, json_data * Data)\n\t{\n\t\treturn (GetData(Key, Data));\n\t}\n\n\tbool32 GetBool(string Key, json_data* Json)\n\t{\n\t\tstring Data = GetData(Key, Json);\n\t\tif (Data == \"1\") return true;\n\n\t\t// Default for no key is false\n\t\treturn false;\n\t}\n\n\tint32 GetInt32(string Key, json_data * Data)\n\t{\n\t\tstring DataInString = GetData(Key, Data);\n\t\tint32 IntData = StringToInt32(DataInString);\n\t\treturn (IntData);\n\t}\n\n\tint64 GetInt64(string Key, json_data * Data)\n\t{\n\t\tstring DataInString = GetData(Key, Data);\n\t\tint64 IntData = StringToInt64(DataInString);\n\t\treturn (IntData);\n\t}\n\n\tint32 GetInt32Safe(string Key, json_data* Data, int32 Default)\n\t{\n\t\tstring DataInString = GetData(Key, Data);\n\t\tif (DataInString == EmptyString) {\n\t\t\treturn Default;\n\t\t}\n\n\t\tint32 IntData = StringToInt32(DataInString);\n\t\treturn (IntData);\n\t}\n\n\treal64 GetReal64(string Key, json_data* Data)\n\t{\n\t\tstring DataInString = GetData(Key, Data);\n\t\treal64 Real = StringToReal64(DataInString);\n\t\treturn (Real);\n\t}\n\n\tvector2 GetVector2(string Key, json_data* Data)\n\t{\n\t\tvector2 Ret;\n\t\tRet.X = GetReal64(Key + \"_x\", Data);\n\t\tRet.Y = GetReal64(Key + \"_y\", Data);\n\t\treturn Ret;\n\t}\n\n\tvoid WriteStruct(meta_member * MetaInfo, uint32 MetaInfoCount, void* AccData, string FileLoc)\n\t{\n\t\tjson_data JsonData = GetJson(GlobalTransMem);\n\n\t\tfor (uint32 index = 0; index < MetaInfoCount; index++) {\n\t\t\tchar* Start = (char*)AccData;\n\t\t\tStart = Start + MetaInfo[index].Offset;\n\t\t\tuint32 Data = *((uint32 *)Start);\n\n\t\t\tAddKeyPair(MetaInfo[index].Name, Data, &JsonData);\n\t\t}\n\n\t\tSaveToFile(&JsonData, FileLoc);\n\t}\n\n\tvoid FillStruct(json_data* JsonData, string KeyParent, meta_member * MetaInfo, uint32 MetaInfoCount, void* DataDest)\n\t{\n\t\tfor (uint32 index = 0; index < MetaInfoCount; index++) {\n\n\t\t\tmeta_member* InfoCurr = &MetaInfo[index];\n\n\t\t\tstring Key = KeyParent + InfoCurr->Name;\n\t\t\tjson_pair * KeyPair = GetPair(Key, JsonData);\n\t\t\tif (KeyPair != GameNull) {\n\n\t\t\t\tstring DataInString = KeyPair->Data;\n\n\t\t\t\t/*\n\t\t\t\tbool32 IsArray = MetaInfo->ArrayLength > 0;\n\t\t\t\tint32 DataCount = 1;\n\n\t\t\t\tif (IsArray) {\n\t\t\t\t*Dest->Curr = '['; Dest->Curr++;\n\t\t\t\tDataCount = MetaInfo->ArrayLength;\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < DataCount; i++) {\n\n\t\t\t\tchar* Start = (char*)AccData;\n\t\t\t\tStart = Start + (MetaInfo->Offset + (i * MetaInfo->Size));\n\t\t\t\t*/\n\n\n\t\t\t\tchar* FieldDest = (char*)DataDest;\n\t\t\t\tFieldDest = FieldDest + InfoCurr->Offset;\n\n\t\t\t\tswitch (InfoCurr->Type) {\n\t\t\t\t\tcase meta_member_type::uint32: {\n\t\t\t\t\t\tuint32 D = (uint32)StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(uint32));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::uint16: {\n\t\t\t\t\t\tuint16 D = (uint16)StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(uint16));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::uint8: {\n\t\t\t\t\t\tuint8 D = (uint8)StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(uint8));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::int32: {\n\t\t\t\t\t\tint32 D = StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(int32));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::int16: {\n\t\t\t\t\t\tint16 D = (int16)StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(int16));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::int8: {\n\t\t\t\t\t\tint8 D = (int8)StringToInt32(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(int8));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::real32: {\n\t\t\t\t\t\treal32 D = (real32)StringToReal64(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(real32));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::real64: {\n\t\t\t\t\t\treal64 D = (real64)StringToReal64(DataInString);\n\t\t\t\t\t\tmemcpy((void*)FieldDest, (void*)&D, sizeof(real64));\n\t\t\t\t\t} break;\n\n\t\t\t\t\tcase meta_member_type::custom: {\n\t\t\t\t\t\tInfoCurr->JsonFillShim(JsonData, InfoCurr->Name + \".\", FieldDest);\n\t\t\t\t\t} break;\n\n\t\t\t\t\tINVALID_DEFAULT\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid ReadIntoStruct(char* Path, meta_member * MetaInfo, uint32 MetaInfoCount, void* DataDest)\n\t{\n\t\tjson_data JsonData = LoadFile(Path, GlobalTransMem);\n\n\t\tjson_pair* TestPair = GetPair(\"FieldHere[1].Droid\", &JsonData);\n\n\t\tint x = 0;\n\n\t\t//FillStruct(&JsonData, \"\", MetaInfo, MetaInfoCount, DataDest);\n\t}\n}\n\n#endif",
			"file": "Game/code/Engine/Json.cpp",
			"file_size": 11462,
			"file_write_time": 133238488295336697,
			"settings":
			{
				"buffer_size": 11068,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Game/code/Engine/EngineCore.cpp",
			"settings":
			{
				"buffer_size": 36288,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Game/code/Engine/EngineCore.h",
			"settings":
			{
				"buffer_size": 13924,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Game/code/Engine/Json.h",
			"settings":
			{
				"buffer_size": 593,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Game/code/Engine/SaveData.cpp",
			"settings":
			{
				"buffer_size": 6607,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ADB: Launch Fresh"
			],
			[
				"adb",
				"ADB: Launch Fresh"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"ad",
				"ADB: Launch Fresh"
			],
			[
				"launch",
				"ADB: Launch Fresh"
			],
			[
				"astyle",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pretty",
				"Pretty JSON: Validate"
			],
			[
				"seting",
				"Preferences: Settings"
			],
			[
				"tmp",
				"View: Toggle Minimap"
			],
			[
				"TMP",
				"View: Toggle Minimap"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"format",
				"SublimeAStyleFormatter: Format Current File"
			],
			[
				"prefer",
				"Preferences: Settings"
			],
			[
				"setting",
				"Preferences: Package Control Settings – User"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"bind",
				"Preferences: Key Bindings"
			],
			[
				"keybind",
				"Preferences: Key Bindings"
			],
			[
				"binding",
				"Preferences: Key Bindings"
			]
		],
		"width": 408.0
	},
	"console":
	{
		"height": 472.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/T/Game/build/Windows/RyanOutput.json",
		"/C/Tripp/backend/firebase-backend/Tools/audiosync_psvr_stag.bat",
		"/C/Tripp/backend/firebase-backend/Tools/UnitySync/run.js",
		"/C/Tripp/backend/firebase-backend/Tools/UnitySync/src/UnitySync.js",
		"/E/tripp-client-audio - ps4/Assets/Editor/ResourceManagement/ExpressionStringBuilder.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Account/ServerMedia.cs",
		"/E/tripp-client-audio - ps4/Assets/TeachingDefinitions/C2T_NavigatingTheHolidaysWithFamilyChallenge.txt",
		"/E/tripp-client-audio - ps4/Assets/TeachingDefinitions/C2T_LucidDreamChallenge.txt",
		"/C/Tripp/backend/firebase-backend/Tools/audiosync_psvr_dev.bat",
		"/E/tripp-client - android/Assets/Scripts/UI/MainMenu/MainMenuExperienceCircle.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/AssetManagement/ExperienceExpressionNetworking.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/AssetManagement/TeachingVOExpression.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/AssetManagement/ExperienceExpression.cs",
		"/E/tripp-client - android/Assets/Scripts/UI/TrippComposer/TrippComposerContentManager.cs",
		"/E/tripp-client-audio - ps4/Assets/TeachingDefinitions/C2T_LiftingOutSlump.txt",
		"/E/tripp-client-audio - ps4/TeachingExpressionStrings/C2T_Abundance.json",
		"/C/Tripp/backend/firebase-backend/Tools/UnitySync/README.md",
		"/C/Tripp/backend/firebase-backend/Tools/UnitySync/src/loadYaml.js",
		"/t/game/code/engine/renderer/shaderloader.cpp",
		"/T/Game/code/preprocessor.cpp",
		"/T/Game/code/Engine/SaveData.h",
		"/T/Game/code/Platform/platform_win32.cpp",
		"/T/Game/code/Engine/MemoryManager.cpp",
		"/T/Game/code/Engine/String.cpp",
		"/T/Game/code/Engine/Json.h",
		"/T/Game/code/Engine/Json.cpp",
		"/T/Game/code/Game/Game.cpp",
		"/T/Game/code/Platform/platform_emscripten.cpp",
		"/T/Game/code/Game/Game.h",
		"/t/game/code/engine/generated.h",
		"/T/Game/code/Engine/EngineCore.h",
		"/T/Game/code/Engine/EngineCore.cpp",
		"/T/Game/code/Engine/SaveData.cpp",
		"/T/Game/code/Game/SkillTree.h",
		"/T/Game/code/Engine/Generated.h",
		"/E/tripp-client - android/Assets/Journey/Art/Art/Shaders/Uber/UberLibrary.cginc",
		"/E/tripp-client - android/Assets/Journey/Art/Art/Shaders/Uber/AmberOpaque.shader",
		"/E/tripp-client - android/Assets/Journey/Scripts/ShaderSwapper.cs",
		"/E/tripp-client - android/Assets/Scripts/Util/TrippBootstrapper.cs",
		"/E/tripp-client - android/Assets/Scripts/UI/V20 MainMenu/MainMenuWelcomeController.cs",
		"/C/Users/perma/Downloads/log.txt",
		"/T/Game/code/Engine/Types.cpp",
		"/E/tripp-client - android/Assets/Journey/Scripts/LocalAvatar.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Plugins/AethericArts/XR/General/LinkAvatarToHelper.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Plugins/Pixelplacement/Surge/Utilities/Initialization.cs",
		"/E/tripp-client - android/Assets/Scripts/UI/MainMenu/ThirdPartyLauncher.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Networking/TrippNetworkManager.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Analytics/AnalyticsManager.cs",
		"/T/Game/code/Engine/LinkedList.cpp",
		"/T/Game/code/Game/Asteroid.cpp",
		"/T/Game/code/Game/Ship.h",
		"/T/Game/code/Game/Ship.cpp",
		"/T/Game/code/Game/SkillTree.cpp",
		"/T/Game/build/Windows/SaveGame.sus",
		"/C/Users/perma/Desktop/notes.txt",
		"/C/Users/perma/Desktop/log.txt",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Util/GlobalTuning.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/TriggerAndTimerHelper.cs",
		"/E/tripp-client - android/Assets/3rdParty/Scripts/Journey/JourneyTrippManager.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Scripts/Playback/TimedEventManager.cs",
		"/E/tripp-client - android/Assets/Scripts/Design/ShaderFader.cs",
		"/E/tripp-client-audio - ps4/Assets/TeachingDefinitions/C2T_TransformingHabitsChallenge.txt",
		"/E/tripp-client-audio - ps4/Assets/TeachingDefinitions/C2T_MindfulnessChallenges.txt",
		"/E/tripp-client - android/Assets/Journey/Scripts/ScoreHelper.cs",
		"/E/tripp-client - android/Assets/Scripts/Playback/MeditationTimedEventManager.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Scripts/Playback/MeditationTimedEventManager.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/CameraContainerController.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/SetAsActiveScene.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Utils/TimeRiggFastForward.cs",
		"/E/tripp-client - android/Assets/3rdParty/Scripts/Journey/JourneyExperienceManager.cs",
		"/T/Game/code/Engine/imgui/imgui_demo.cpp",
		"/T/Game/code/Engine/Renderer/ogles3.cpp",
		"/T/Game/code/Engine/FixedAllocator.cpp",
		"/E/tripp-client - android/Assets/Scripts/Input/PlayerInput.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/XR/XRUIInputModuleKeepEnabled.cs",
		"/E/tripp-client - android/Library/PackageCache/com.unity.xr.interaction.toolkit@2.1.1/Runtime/UI/XRUIInputModule.cs",
		"/T/Game/code/Engine/Math.cpp",
		"/T/Game/code/Game/Asteroid.h",
		"/t/game/code/engine/linkedlist.h",
		"/E/tripp-client - android/Assets/Scripts/UI/InExperience/TrippPauseMenu.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/Engine/ExperienceController.cs",
		"/E/tripp-client - android/Assets/_SerenityGarden/Scripts/SerenityGarden/UI/SanctumPauseMenu.cs",
		"/T/Game/code/Game/Item.h",
		"/E/tripp-client - android/Assets/3rdParty/Scripts/JourneyLauncher.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/Engine/PlayerController.cs",
		"/E/tripp-client - android/Assets/Art/ARTISTS/Dmitri/Drift/_Scripts/Runtime/Core/DriftExperienceManager.cs",
		"/E/tripp-client - android/Library/PackageCache/com.unity.xr.interaction.toolkit@2.1.1/Runtime/Interaction/Controllers/ActionBasedController.cs",
		"/E/tripp-client - android/Assets/Scripts/HandenessManager.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Plugins/MMFeedbacks/MMTools/Tools/MMSingletons/MMPersistentSingleton.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Plugins/MMFeedbacks/MMTools/Tools/MMSingletons/MMPersistentHumbleSingleton.cs",
		"/E/tripp-client - android/Assets/Journey/Scripts/Plugins/AethericArts/XR/General/XRHelper.cs",
		"/E/tripp-client - android/Assets/Scripts/Input/ControllerEnabler.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/XR/XritControllerManager.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/Engine/BackgroundController.cs",
		"/T/Game/code/Game/Item.cpp",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Account/AccountManager.cs",
		"/E/tripp-client - android/Assets/Editor/AutoBuilder.cs",
		"/E/tripp-client - android/Library/PackageCache/com.unity.xr.core-utils@2.0.0/Runtime/XROrigin.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Engine/XR/DeviceDetection.cs",
		"/E/tripp-client - android/Library/PackageCache/com.unity.render-pipelines.core@12.1.6/Runtime/Debugging/DebugUpdater.cs",
		"/E/tripp-client - android/Assets/Scripts/HandleVREvents.cs",
		"/E/tripp-client - android/Assets/_SerenityGarden/Scripts/ExperienceController.cs",
		"/T/Game/code/Game/Definitions.cpp",
		"/t/game/code/game/recipe.cpp",
		"/t/game/code/game/recipe.h",
		"/T/Game/code/Game/Station.cpp",
		"/T/Game/code/Game/Station.h",
		"/E/tripp-client - android/Assets/Scripts/UI/V20 MainMenu/Featured/MainMenuFeatured.cs",
		"/E/tripp-client - android/Assets/3rdParty/Scripts/CrystalBowlsLauncher.cs",
		"/E/tripp-client - android/Assets/3rdParty/Scripts/CosmicFlowLauncher.cs",
		"/T/Game/code/Game/AssetList.cpp",
		"/E/tripp-client - android/Assets/Scripts/UI/MainMenu/TrippDetailsPanel.cs",
		"/E/tripp-client - android/Assets/Oculus/Platform/Scripts/Models/LaunchDetails.cs",
		"/E/tripp-client - android/Assets/Scripts/TRIPP/Core/Analytics/Analytics.cs",
		"/C/Tripp/backend/firebase-backend/Tools/artsync_win64_prod.bat",
		"/C/Tripp/backend/firebase-backend/Tools/artsync_win64_stag.bat",
		"/C/Tripp/backend/firebase-backend/Tools/artsync_psvr_prod.bat",
		"/C/Tripp/backend/firebase-backend/Tools/artsync_psvr_stag.bat",
		"/C/Users/perma/Desktop/Capture.PNG",
		"/C/Users/perma/Desktop/file.cpp",
		"/E/tripp-client - android/Assets/Scripts/UI/RegistrationUI.cs",
		"/T/Game/code/Engine/imgui/imgui.h",
		"/T/Game/code/Engine/imgui/imgui.cpp",
		"/T/Game/code/Engine/Timer.cpp",
		"/T/Game/code/Game/AssetList.h",
		"/t/game/code/game/station.cpp",
		"/t/game/code/game/station.h",
		"/T/Game/code/Game/Recipe.cpp"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			"T:\\Game\\code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"T:\\Game",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\3rdParty",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\3rdParty",
			"T:\\Game\\code",
			"T:/Game",
			"T:/Gmae",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"T:/code",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\tripp-client-source",
			"T:/code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"T:/code",
			"C:\\Tripp\\tripp-client - windows\\Assets\\3rdParty\\CosmicFlow",
			"T:/code",
			"T:/",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\3rdParty\\Visitations",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\3rdParty\\CosmicFlow",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Users\\perma\\Desktop\\UnityNpToolkit2_Source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Users\\perma\\Downloads\\PlayStationVRExample_ 2019_3",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\AssetStore",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Users\\perma\\Desktop\\UnityNpToolkit2_Source",
			"T:\\code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Editor",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Users\\perma\\Desktop\\UnityNpToolkit2_Source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Users\\perma\\Desktop\\UnityNpToolkit2_Source",
			"T:/code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"T:\\code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Digital Archive\\Game Development",
			"T:/code",
			"T:",
			"C:\\Users\\perma\\Desktop\\SimplePSVR54\\testproj\\New Unity Project",
			"C:\\Users\\perma\\Desktop\\UnityNpToolkit2_Source",
			"T:/code",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"T:/code",
			"T:",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"T:/code",
			"T:/",
			"C:\\Users\\perma\\Downloads\\SimplePSVR54",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Editor",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\Assets\\Editor",
			"",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"T:\\",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts,C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\tripp-client-source",
			"C:\\Tripp\\tripp-client - ps4\\tripp-client - ps4\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets\\",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\Assets\\Prefabs",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Tripp\\tripp-client - windows\\Assets\\Editor,C:\\Tripp\\tripp-client - windows\\Assets\\AssetStore",
			"C:\\Tripp\\tripp-client - windows\\Assets\\Prefabs,C:\\Tripp\\tripp-client - windows\\Assets\\Resources",
			"C:\\Tripp\\tripp-client - windows\\Assets\\Resources",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\Scripts",
			"C:\\Tripp\\tripp-client - art-repo\\tripp-client-art\\Assets",
			"T:/code",
			"T:",
			"C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Digital Archive\\BrickHeroes\\DataMine",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Users\\perma\\Desktop\\llhu\\english\\heroes",
			"C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\Assets\\Editor",
			"C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"T:\\code",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Prefabs,C:\\Tripp\\tripp-client - android\\Assets\\Scenes",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Prefabs,C:\\Tripp\\tripp-client - android\\Assets\\Scenes,C:\\Tripp\\tripp-client - android\\Assets\\Resources",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Prefabs,C:\\Tripp\\tripp-client - android\\Assets\\Scenes",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\Prefabs",
			"C:\\Tripp\\tripp-client - android",
			"C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen\\Scripts,C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\Assets\\Editor,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen,C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\Assets\\Editor,C:\\Tripp\\tripp-client - android\\tripp-client-source,C:\\Tripp\\tripp-client - android\\Assets\\3rdParty\\Lumen",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\Assets\\Editor,C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts,C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Assets",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts\\,C:\\Tripp\\tripp-client - android\\Assets\\Editor,C:\\Tripp\\tripp-client - android\\tripp-client-source",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts\\,C:\\Tripp\\tripp-client - android\\Assets\\Oculus",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android\\Packages",
			"C:\\Tripp\\tripp-client - android\\",
			"C:\\Tripp\\tripp-client - android\\Assets\\",
			"C:\\Tripp\\tripp-client - android\\Assets\\Scripts",
			"C:\\Tripp\\tripp-client - android",
			"C:\\Tripp\\tripp-client\\Assets",
			"C:\\Tripp\\tripp-client\\Assets\\",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source,C:\\Tripp\\tripp-client\\Assets\\Editor",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source",
			"C:\\Tripp\\tripp-client\\Assets",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source;,C:\\Tripp\\tripp-client\\Assets\\Editor",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source;C:\\Tripp\\tripp-client\\Assets\\Editor",
			"C:\\Tripp\\tripp-client\\Assets,C:\\Tripp\\tripp-client\\tripp-client-source",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source",
			"C:\\Tripp\\tripp-client\\Assets,C:\\Tripp\\tripp-client\\tripp-client-source",
			"C:\\Tripp\\tripp-client\\Assets\\Scripts,C:\\Tripp\\tripp-client\\tripp-client-source",
			"F:\\Tripp\\tripp-client\\Assets\\Scripts,F:\\Tripp\\tripp-client\\tripp-client-source,F:\\Tripp\\tripp-client\\Assets\\Editor"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"enum class token_type",
			"token_type",
			"token_type::open_curly",
			"Child",
			"Array",
			"array",
			"assetBundlesPath",
			"platform",
			"buildtype",
			"response",
			"UpdateTeachingEntriesForType",
			"teaching",
			"ExperienceImageSize",
			"servermedia",
			"sizes",
			"ExperienceImageSize",
			"calm2Teachings",
			"GetTeachingsForType",
			"TeahcingVOExpressionEntry",
			"ExperienceImageSize",
			"TeahcingVOExpressionEntry",
			"ExperienceExpressionString",
			"experiencefields",
			"pendingImageDownloadIds",
			"GetUrlForClosestSize",
			"experiencemenuinfo",
			"FillAndCacheImageWhenLoaded",
			"teaching",
			"TeahcingVOExpressionEntry",
			"teachingImageDirectory",
			"teachingexpressionthumbnails",
			"teachingImageDirectory",
			"image",
			"createorupdateexperiences",
			"graphqlRequest",
			"imageid",
			"imagesByName",
			"imagesBucket",
			"uploadExperienceImages",
			"graphqlRequest",
			"uploadexperienceimages",
			"logInputsInfo",
			"image",
			"TryCopyThumbnail",
			"experiencesBuilt",
			"BuildTeachingExpressionStrings",
			"experienceImageDirectory",
			"teachingImageDirectory",
			"teaching",
			"image",
			"teachinginput",
			"syncexperiences",
			"uploadExperienceImages",
			"imagesbucket",
			"syncVersionedAssetBundles",
			"teachingsDir",
			"sync",
			"uploadExperienceImages",
			"filenames",
			"imagesBucket",
			"Token_SemiColon",
			"MoveUntil",
			"semicolon",
			"MoveUntil",
			"vector",
			"until",
			"Skipping",
			"metastruct",
			"token_metastruct",
			"primitivetypes",
			"PrimitiveTypes",
			"primitivetye",
			"PrimitiveTypes",
			"ispointer",
			"pointer",
			"ispointer",
			"Skill",
			"FillStruct",
			"shim",
			"GetInt32",
			"length",
			"lengh",
			"GetPair",
			"SaveToFile",
			"readfile",
			"writefile",
			"write",
			"meta_member",
			"tostringfunc",
			"updatevisual",
			"_initialVertexOffset",
			"_vertexOffset",
			"UpdateVisuals",
			"worldspacescale",
			"MetaInfo",
			"struct_string_return",
			"StructMemberToString",
			"analyticsVersion",
			"BQAnalytics",
			"ZoomTarget",
			"orthozoom",
			"ZoomTarget",
			"zoomtarget",
			"gamecamera",
			"Zoom",
			"ZoomTarget",
			"universe",
			"unlocked",
			"SkillTree",
			"skilltree",
			"currentstep = ",
			"runLengthDefinition",
			"_onFadeInComplete",
			"_rippleTimeMode",
			"rippletimemodd",
			"createmovementstep",
			"journey_step_type::movement",
			"toggle",
			"SimFPS",
			"ship",
			"LoadGame",
			"Asteroid",
			"AnalyticsManager",
			"experiencetype",
			"OnExperienceTypeSet",
			"experiencetype",
			"ExperienceType",
			"homeButton"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"FuelRateMassPerSecond",
			"Three.Y",
			"Zero.Y",
			"One.Y",
			"Two.Y",
			"Three.Y",
			"Two.X",
			"One.X",
			"Zero.X",
			"",
			"FontStyleH3",
			"Globals->FontStyleP",
			"Globals->Input",
			"Camera.main.transform",
			"Camera.main",
			"4k",
			"2k",
			"",
			"RyanTesting",
			"",
			"</b>",
			"<b>",
			"",
			"</b>",
			"<b>",
			"",
			"ConnectionStatus",
			"StepsInDay",
			"GameRenderer",
			"LocalTakenGrids",
			"GetBoolParameter",
			"null;",
			"newObj",
			"Watchtower",
			"Log",
			"Tree",
			"Pyramid",
			"Grassland",
			"Foundation",
			"TN_Watchtower",
			"TN_Log",
			"TN_Tree",
			"TN_Pyramid",
			"TN_Grassland",
			"TN_Foundation",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Game/code/Game/Game.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37850,
						"regions":
						{
						},
						"selection":
						[
							[
								11945,
								11945
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4380.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/t/game/code/engine/generated.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4015,
						"regions":
						{
						},
						"selection":
						[
							[
								2463,
								2463
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 375.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Game/code/Game/Game.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5471,
						"regions":
						{
						},
						"selection":
						[
							[
								5445,
								5445
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3430.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Game/code/Engine/Json.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11068,
						"regions":
						{
						},
						"selection":
						[
							[
								2487,
								2487
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 660.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Game/code/Engine/EngineCore.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36288,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Game/code/Engine/EngineCore.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13924,
						"regions":
						{
						},
						"selection":
						[
							[
								2207,
								2195
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Game/code/Engine/Json.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 593,
						"regions":
						{
						},
						"selection":
						[
							[
								583,
								583
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Game/code/Engine/SaveData.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6607,
						"regions":
						{
						},
						"selection":
						[
							[
								1291,
								999
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.astyle_error_message":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 368.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 98.0
	},
	"pinned_build_system": "Packages/User/TowerEngine_game_win32.sublime-build",
	"project": "SublimeProj.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"en",
				"Game\\code\\Engine\\EngineCore.cpp"
			],
			[
				"save",
				"Game\\code\\Engine\\SaveData.cpp"
			],
			[
				"json",
				"Game\\code\\Engine\\Json.cpp"
			],
			[
				"game",
				"Game\\code\\Game\\Game.cpp"
			],
			[
				"unity",
				"C:\\Tripp\\backend\\firebase-backend\\Tools\\UnitySync\\src\\UnitySync.js"
			],
			[
				"sync",
				"C:\\Tripp\\backend\\firebase-backend\\Tools\\UnitySync\\src\\UnitySync.js"
			],
			[
				"run",
				"C:\\Tripp\\backend\\firebase-backend\\Tools\\UnitySync\\run.js"
			],
			[
				"ryan",
				"T:\\Game\\build\\Windows\\RyanOutput.json"
			],
			[
				"pre",
				"Game\\code\\preprocessor.cpp"
			],
			[
				"gen",
				"Game\\code\\Engine\\Generated.h"
			],
			[
				"eng",
				"Game\\code\\Engine\\EngineCore.cpp"
			],
			[
				"prep",
				"Game\\code\\preprocessor.cpp"
			],
			[
				"skil",
				"Game\\code\\Game\\SkillTree.h"
			],
			[
				"",
				"Game\\code\\Game\\Game.cpp"
			],
			[
				"j",
				"Game\\code\\Engine\\Json.h"
			],
			[
				"string",
				"Game\\code\\Engine\\String.cpp"
			],
			[
				"svae",
				"Game\\code\\Engine\\SaveData.cpp"
			],
			[
				"ems",
				"Game\\code\\Platform\\platform_emscripten.cpp"
			],
			[
				"plat",
				"Game\\code\\Platform\\platform_win32.cpp"
			],
			[
				"engin",
				"Game\\code\\Engine\\EngineCore.h"
			],
			[
				"types",
				"Game\\code\\Engine\\Types.cpp"
			],
			[
				"engine",
				"Game\\code\\Engine\\EngineCore.cpp"
			],
			[
				"ship",
				"Game\\code\\Game\\Ship.cpp"
			],
			[
				"journeytrip",
				"E:\\tripp-client - android\\Assets\\Journey\\Scripts\\TriggerAndTimerHelper.cs"
			],
			[
				"shi",
				"Game\\code\\Game\\Ship.cpp"
			],
			[
				"aster",
				"Game\\code\\Game\\Asteroid.cpp"
			],
			[
				"demo",
				"Game\\code\\Engine\\imgui\\imgui_demo.cpp"
			],
			[
				"asteroid",
				"Game\\code\\Game\\Asteroid.cpp"
			],
			[
				"linked",
				"Game\\code\\Engine\\LinkedList.cpp"
			],
			[
				"journ",
				"E:\\tripp-client - android\\Assets\\3rdParty\\Scripts\\Journey\\JourneyExperienceManager.cs"
			],
			[
				"pause",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\InExperience\\TrippPauseMenu.cs"
			],
			[
				"link",
				"Game\\code\\Engine\\LinkedList.h"
			],
			[
				"gmae",
				"Game\\code\\Game\\Game.h"
			],
			[
				"math",
				"Game\\code\\Engine\\Math.cpp"
			],
			[
				"fixed",
				"Game\\code\\Engine\\FixedAllocator.cpp"
			],
			[
				"fixe",
				"Game\\code\\Engine\\FixedAllocator.cpp"
			],
			[
				"win",
				"Game\\code\\Platform\\platform_win32.cpp"
			],
			[
				"linke",
				"Game\\code\\Engine\\LinkedList.cpp"
			],
			[
				"enigne",
				"Game\\code\\Engine\\EngineCore.cpp"
			],
			[
				"gam",
				"Game\\code\\Game\\Game.cpp"
			],
			[
				"asteroi",
				"Game\\code\\Game\\Asteroid.cpp"
			],
			[
				"ogl",
				"Game\\code\\Engine\\Renderer\\ogles3.cpp"
			],
			[
				"item",
				"Game\\code\\Game\\Item.h"
			],
			[
				"third",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\ThirdPartyLauncher.cs"
			],
			[
				"detail",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\TrippDetailsPanel.cs"
			],
			[
				"feature",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\V20 MainMenu\\Featured\\MainMenuFeatured.cs"
			],
			[
				"asset",
				"Game\\code\\Game\\AssetList.cpp"
			],
			[
				"def",
				"Game\\code\\Game\\Definitions.cpp"
			],
			[
				"station",
				"Game\\code\\Game\\Station.cpp"
			],
			[
				"em",
				"Game\\code\\Platform\\platform_emscripten.cpp"
			],
			[
				"rec",
				"Game\\code\\Game\\Recipe.cpp"
			],
			[
				"recip",
				"Game\\code\\Game\\Recipe.cpp"
			],
			[
				"rcip",
				"Game\\code\\Game\\Recipe.cpp"
			],
			[
				"stat",
				"Game\\code\\Game\\Station.cpp"
			],
			[
				"order",
				"Game\\code\\Game\\Order.h"
			],
			[
				"or",
				"Game\\code\\Game\\Order.h"
			],
			[
				"teyp",
				"Game\\code\\Engine\\imgui\\imstb_truetype.h"
			],
			[
				"imgui",
				"Game\\code\\Engine\\imgui\\imgui.h"
			],
			[
				"de",
				"Game\\code\\Game\\Definitions.cpp"
			],
			[
				"ore",
				"Game\\code\\Game\\Order.h"
			],
			[
				"time",
				"Game\\code\\Engine\\Timer.cpp"
			],
			[
				"itme",
				"Game\\code\\Game\\Item.cpp"
			],
			[
				"g",
				"Game\\code\\Game\\Game.h"
			],
			[
				"shh",
				"Game\\code\\Game\\Ship.h"
			],
			[
				"composerp",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\ComposerPage.cs"
			],
			[
				"debu",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuDebugTrippsPanel.cs"
			],
			[
				"exper",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\ExperienceButton.cs"
			],
			[
				"debug",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuDebugTrippsPanel.cs"
			],
			[
				"composer",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\TrippComposer\\TrippComposerContentManager.cs"
			],
			[
				"debugtr",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuDebugTrippsPanel.cs"
			],
			[
				"debugtrip",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuDebugTrippsPanel.cs"
			],
			[
				"featured",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\V20 MainMenu\\Featured\\MainMenuFeatured.cs"
			],
			[
				"featture",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\V20 MainMenu\\Featured\\MainMenuFeatured.cs"
			],
			[
				"hip",
				"Game\\code\\Game\\Ship.h"
			],
			[
				"asse",
				"Game\\code\\Game\\AssetList.cpp"
			],
			[
				"itetm",
				"Game\\build_scripts\\sign_android TEMPLATE.bat"
			],
			[
				"ass",
				"Game\\code\\Game\\AssetList.cpp"
			],
			[
				"assett",
				"Game\\code\\Game\\AssetList.h"
			],
			[
				"d",
				"Game\\code\\Game\\Definitions.cpp"
			],
			[
				"imgui.cpp",
				"Game\\code\\Engine\\imgui\\imgui.cpp"
			],
			[
				"as",
				"Game\\code\\Game\\AssetList.cpp"
			],
			[
				"andr",
				"Game\\code\\Platform\\platform_android.cpp"
			],
			[
				"build",
				"Game\\build_scripts\\build_emscripten.bat"
			],
			[
				"androi",
				"Game\\code\\Platform\\platform_android.cpp"
			],
			[
				"emsc",
				"Game\\code\\Platform\\platform_emscripten.cpp"
			],
			[
				"android",
				"Game\\code\\Platform\\platform_android.cpp"
			],
			[
				"w",
				"Game\\code\\Platform\\platform_win32.cpp"
			],
			[
				"gener",
				"Game\\code\\Engine\\Generated.h"
			],
			[
				"emscr",
				"Game\\build_scripts\\build_emscripten.bat"
			],
			[
				"egine",
				"Game\\code\\Engine\\EngineCore.cpp"
			],
			[
				"profiler",
				"Game\\code\\Engine\\Profiler.cpp"
			],
			[
				"wi",
				"Game\\code\\Platform\\platform_win32.cpp"
			],
			[
				"logging",
				"Game\\code\\Engine\\Logging.cpp"
			],
			[
				"log",
				"Game\\build\\Windows\\log.txt"
			],
			[
				"buidl",
				"Game\\build_scripts\\build_emscripten.bat"
			],
			[
				"cmake",
				"Game\\CMakeLists.txt"
			],
			[
				"buid",
				"Game\\build_scripts\\build_win32.bat"
			],
			[
				"ogles",
				"Game\\code\\Platform\\render_win32_ogles3.cpp"
			],
			[
				"pla",
				"Game\\code\\Platform\\platform_win32.cpp"
			],
			[
				"gloal",
				"E:\\tripp-client - android\\Assets\\Scripts\\TRIPP\\Core\\Util\\GlobalTuning.cs"
			],
			[
				"global",
				"E:\\tripp-client - android\\Assets\\Scripts\\TRIPP\\Core\\Util\\GlobalTuning.cs"
			],
			[
				"uip",
				"Game\\code\\Engine\\ui\\UiPanel.cpp"
			],
			[
				"mapper",
				"Game\\code\\Engine\\mapper\\mapper.cpp"
			],
			[
				"main",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuController.cs"
			],
			[
				"mission",
				"Game\\code\\Game\\Missions.cpp"
			],
			[
				"colli",
				"Game\\code\\Engine\\Collision.cpp"
			],
			[
				"collisin",
				"Game\\code\\Engine\\Collision.cpp"
			],
			[
				"editor",
				"Game\\code\\Engine\\Editor.cpp"
			],
			[
				"misison",
				"Game\\code\\Game\\Missions.cpp"
			],
			[
				"missions",
				"Game\\code\\Game\\Missions.cpp"
			],
			[
				"mainmen",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\MainMenuController.cs"
			],
			[
				"invento",
				"E:\\tripp-client - android\\Assets\\_SerenityGarden\\Scripts\\InventoryController.cs"
			],
			[
				"analy",
				"E:\\tripp-client - android\\Assets\\Scripts\\TRIPP\\Core\\Analytics\\Analytics.cs"
			],
			[
				"miss",
				"Game\\code\\Game\\Missions.cpp"
			],
			[
				"miossion",
				"Game\\assets\\Missions\\fifth_mission.missiondefinition"
			],
			[
				"misisons",
				"Game\\code\\Game\\Missions.cpp"
			],
			[
				"camera",
				"Game\\code\\Engine\\camera\\camera.cpp"
			],
			[
				"amer",
				"Game\\code\\Engine\\camera\\camera.cpp"
			],
			[
				"gizmo",
				"Game\\code\\Engine\\gizmos.cpp"
			],
			[
				"camb",
				"C:\\Users\\perma\\Desktop\\CambriaPushNotes.txt"
			],
			[
				"gardenflow",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\MainMenu\\GardenFlowLauncher.cs"
			],
			[
				"trippscen",
				"E:\\tripp-client - android\\Assets\\Scripts\\TRIPP\\Engine\\Util\\TrippSceneManager.cs"
			],
			[
				"trippscene",
				"E:\\tripp-client - android\\Assets\\Scripts\\TRIPP\\Engine\\Util\\TrippSceneManager.cs"
			],
			[
				"experien",
				"E:\\tripp-client - android\\Assets\\_SerenityGarden\\Scripts\\ExperienceController.cs"
			],
			[
				"cambria",
				"C:\\Users\\perma\\Desktop\\CambriaPushNotes.txt"
			],
			[
				"util",
				"E:\\tripp-client - android\\Assets\\Editor\\EditorUtil.cs"
			],
			[
				"gift",
				"E:\\tripp-client - android\\Assets\\Scripts\\UI\\InExperience\\ReceiveGiftPanel.cs"
			],
			[
				"gardencontroller",
				"E:\\tripp-client - android\\Assets\\_SerenityGarden\\Scripts\\ProgressionController.cs"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 74.0,
		"last_filter": "physics",
		"selected_items":
		[
			[
				"physics",
				"PhysicsAddForce"
			]
		],
		"width": 400.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 259.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
